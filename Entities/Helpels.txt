#region HelpersForRegisterRoomTable

        public int GetDays
        {
            get
            {
                return (EndDate.Date - StartDate.Date).Days;
            }
        }

        public decimal GetPrice
        {
            get
            {
                return GetDays * Room.Price;
            }
        }

#endregion


#region HelpersForRoomTabel

        // Временный статус - активный, если есть заказ через месяц.
        private bool GetTemporaryStatus { get; set; }

        // Актуальный статус.
        public bool GetActualStatus
        {
            get
            {
                return GetActualitiStatus(Id);
            }
        }

        public string GetPhoto
        {
            get
            {
                if (Image is null)
                    return Directory.GetCurrentDirectory() + @"\Images\Room\Default.jpg";

                return Directory.GetCurrentDirectory() + @"\Images\Room\" + Image.Trim();
            }
        }

        public string GetStatusColor
        {
            get
            {
                if (GetActualStatus)
                {
                    return "#42E448";
                }

                return "#FF5656";
            }
        }

        public string GetStatusStr
        {
            get
            {

                if (GetActualStatus)
                    return "Свободен";

                return "Занят";
            }
        }

        public string ShortDesc
        {
            get
            {
                string[] str = Description.Split(' ');

                string[] words = new string[10];

                for (int i = 0; i < 6; i++)
                {
                    words[i] = str[i];
                }

                return String.Join(" ", words);

            }
        }


        // Helpers
        protected bool GetActualitiStatus(int roomId)
        {

            // находим все заказы
            var rooms = HotelContext.GetContext().RegisterRooms.Where(x => x.Id_room == roomId);

            if (rooms.Count() == 0)
                return true;

            var room = new RegisterRoom();

            // находим актуальный заказ с диапазоном в 30 дней 

            // ОШИБКА, статус Свободен на последний день проживания
            foreach (var item in rooms)
            {
                if (item.EndDate < DateTime.Now)
                    continue;

                if (item.EndDate >= DateTime.Now && item.EndDate <= DateTime.Now.AddDays(30))
                {
                    room = item;
                }
            }

            if (room.Id == 0)
            {
                GetTemporaryStatus = true;
                return true;
            }

            // проверка, в данный момент занят номер?
            var StartDate = room.StartDate;
            var EndDate = room.EndDate;
            var date = DateTime.Now.Date;

            while (StartDate <= EndDate)
            {
                if (StartDate == date)
                    return false;

                StartDate = StartDate.AddDays(1);
            }

            return false;
        }

#endregion


#region HelpersForUserTabel

        public string GetPhoto
        {
            get
            {
                if (Image is null)
                    return Directory.GetCurrentDirectory() + @"\Images\User\UserNull.png";

                return Directory.GetCurrentDirectory() + @"\Images\User\" + Image.Trim();
            }
        }

        public string GetDesc
        {
            get
            {
                if (Description is null)
                {
                    return "—";
                }

                return Description;
            }
        }

#endregion

